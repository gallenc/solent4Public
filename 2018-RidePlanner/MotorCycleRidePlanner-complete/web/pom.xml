<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.solent.examples.com600.mcride</groupId>
        <artifactId>MotorCycleRidePlanner</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    
    <modelVersion>4.0.0</modelVersion>
    <artifactId>MotorCycleRidePlanner-web</artifactId>
    <name>MotorCycleRidePlanner-web</name>
    <packaging>war</packaging>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <build>
		
	
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>package-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                        <!-- this prevents long startup times with scanning all jars for annotations -->
                        <!-- see https://stackoverflow.com/questions/25229710/jetty-annotation-timeout-reason/43819722 -->
                        <!-- https://www.eclipse.org/jetty/documentation/9.4.x/configuring-webapps.html  -->
                        <!-- org.eclipse.jetty.server.webapp.WebInfIncludeJarPattern -->
                        <webInfIncludeJarPattern>.*/foo-[^/]*\.jar$|.*/classes/.*</webInfIncludeJarPattern>
                    </webAppConfig>
                    <httpConnector>
                        <port>8680</port>
                    </httpConnector>
                    <!-- used to configure jetty during mvn jetty:run -->
                    <jettyXml>${project.basedir}/src/test/jetty/jetty-config.xml</jettyXml>

                    <systemProperties>
                        <systemProperty>
                            <name>log4j.debug</name>
                            <value>true</value>
                        </systemProperty>
<!--                        <systemProperty>
                            <name>log4j.configuration</name>
                            <value>./log4j2.xml</value>
                        </systemProperty>-->
                    </systemProperties>

                    
                    <!--                    <systemproperties>
                        <systemproperty>
                            <name>org.apache.commons.logging.Log</name>
                            <value>org.apache.commons.logging.impl.Log4JLogger</value>
                        </systemproperty>
                        <systemproperty>
                            <name>slf4j</name>
                            <value>true</value>
                        </systemproperty>
                        <systemproperty>
                            <name>log4j2.debug</name>
                            <value>true</value>
                        </systemproperty>
                        <systemproperty>
                            <name>log4j2.configuration</name>
                            <value>file:./jetty/log4j.properties</value>
                            <value>file:///${basedir}/src/main/resources/log4j2.xml</value>
                        </systemproperty>
                    </systemproperties>-->
                </configuration>
                <!-- logging dependencies for jetty -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                        <version>${log4j.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                        <version>${log4j.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                        <version>${log4j.version}</version>
                    </dependency>


                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <excludes>
                        <!-- prevent tests running in this package. These are manual one off development tests -->
                        <exclude>**/manual/*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
            </resource>
        </resources>
    </build>

    <dependencies>
            
        <!-- project module dependencies -->

        <dependency>
            <groupId>org.solent.examples.com600.mcride</groupId>
            <artifactId>MotorCycleRidePlanner-model</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.solent.examples.com600.mcride</groupId>
            <artifactId>MotorCycleRidePlanner-dao-jaxb</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        
        <dependency>
            <groupId>org.solent.examples.com600.mcride</groupId>
            <artifactId>MotorCycleRidePlanner-dao-jpa</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.solent.examples.com600.mcride</groupId>
            <artifactId>MotorCycleRidePlanner-service</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- Jetty dependencies -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-jetty-http</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <scope>compile</scope>
        </dependency>
      
        <!-- Logging SLF4J dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- test -->
        <!-- Logging using Log4J Test Dependencies -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- slf4j test dependencies -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>compile</scope>
        </dependency>
        
                            <!-- dependencies for java 11 -->
                   <dependency>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                        <scope>compile</scope>
                    </dependency>
                    <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <scope>compile</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.jaxb</groupId>
                        <artifactId>jaxb-runtime</artifactId>
                        <scope>compile</scope>
                    </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>
